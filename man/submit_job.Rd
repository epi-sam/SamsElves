% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/submit_job.R
\name{submit_job}
\alias{submit_job}
\title{Submit a script as a job to the Slurm cluster}
\usage{
submit_job(
  script_path = NULL,
  threads = 2L,
  mem = "10G",
  runtime_min = 15L,
  array_tasks_int = NULL,
  archiveTF = TRUE,
  job_name = NULL,
  partition = "all.q",
  account = NULL,
  hold_for_JobIDs = NULL,
  language = "R",
  r_image = NULL,
  shell_script_path = NULL,
  std_err_root = file.path("/mnt/share/temp/slurmoutput", Sys.info()[["user"]], "error"),
  std_out_root = file.path("/mnt/share/temp/slurmoutput", Sys.info()[["user"]], "output"),
  console_style_log_tf = FALSE,
  args_list = NULL,
  arg_vecs_to_comma_str = TRUE,
  verbose = TRUE,
  v_verbose = FALSE,
  send_email = FALSE,
  email_address = paste0(Sys.info()[["user"]], "@uw.edu"),
  dry_runTF = FALSE
)
}
\arguments{
\item{script_path}{[chr] full path to submitted script}

\item{threads}{[int] cluster resource requirement}

\item{mem}{[chr] cluster resource requirement}

\item{runtime_min}{[num] cluster resource requirement}

\item{array_tasks_int}{[int] (default: NULL - if not NULL, array job is assumed) - vector of integers for you array (e.g. c(1L:10L))}

\item{archiveTF}{[lgl] (default FALSE) do you need an archive node?}

\item{job_name}{[chr] Will be name of script if NULL}

\item{partition}{[chr] a.k.a. 'queue' - cluster resource requirement}

\item{account}{[chr] a.k.a. 'project' - cluster resource requirement}

\item{hold_for_JobIDs}{vector of jobids that must complete successfully before running this job (https://slurm.schedmd.com/sbatch.html#OPT_dependency)}

\item{language}{[chr] coding language for job (see valid_langs validation)}

\item{r_image}{[chr] (default "latest.img") e.g. "/mnt/share/singularity-images/rstudio/ihme_rstudio_4214.img"}

\item{shell_script_path}{[path] path to shell script (language-specific)}

\item{std_err_root}{[chr] path for Slurm std_err logs}

\item{std_out_root}{[chr] path for Slurm std_out logs}

\item{console_style_log_tf}{[lgl] if TRUE, combine std_err and std_out into one log in the std_out_root}

\item{args_list}{[list, chr] optional named list() of arguments, e.g. list("arg1" = arg1, "arg2" = arg2)}

\item{arg_vecs_to_comma_str}{[lgl] if TRUE, convert atomic elements of args_list to comma-separated strings}

\item{verbose}{[lgl] print submission command and job_id}

\item{v_verbose}{[lgl] print log paths}

\item{send_email}{[lgl] send email on job completion?}

\item{dry_runTF}{[lgl] (default FALSE) if TRUE, only message and return submission command, no job submission}
}
\value{
[int] job_id of submitted job, also messsage with job_id and job_name
}
\description{
Function contains internal defaults for R and Python shell scripts.
Function will build log paths automatically.
}
